; phase1: complete schedule
(set-logic QF_LIA)
(set-option :produce-models true)
(declare-fun index_0_0_0 () Bool)
(declare-fun index_0_0_1 () Bool)
(declare-fun home_0_0 () Int)
(declare-fun away_0_0 () Int)
(declare-fun index_0_1_0 () Bool)
(declare-fun index_0_1_1 () Bool)
(declare-fun home_0_1 () Int)
(declare-fun away_0_1 () Int)
(declare-fun index_0_2_0 () Bool)
(declare-fun index_0_2_1 () Bool)
(declare-fun home_0_2 () Int)
(declare-fun away_0_2 () Int)
(declare-fun index_1_0_0 () Bool)
(declare-fun index_1_0_1 () Bool)
(declare-fun home_1_0 () Int)
(declare-fun away_1_0 () Int)
(declare-fun index_1_1_0 () Bool)
(declare-fun index_1_1_1 () Bool)
(declare-fun home_1_1 () Int)
(declare-fun away_1_1 () Int)
(declare-fun index_1_2_0 () Bool)
(declare-fun index_1_2_1 () Bool)
(declare-fun home_1_2 () Int)
(declare-fun away_1_2 () Int)
(assert (= (+ (ite index_0_0_0 1 0) (ite index_0_0_1 1 0)) 1))
(assert (= (+ (ite index_0_1_0 1 0) (ite index_0_1_1 1 0)) 1))
(assert (= (+ (ite index_0_2_0 1 0) (ite index_0_2_1 1 0)) 1))
(assert (= (+ (ite index_1_0_0 1 0) (ite index_1_0_1 1 0)) 1))
(assert (= (+ (ite index_1_1_0 1 0) (ite index_1_1_1 1 0)) 1))
(assert (= (+ (ite index_1_2_0 1 0) (ite index_1_2_1 1 0)) 1))
(assert (= (+ (ite index_0_0_0 1 0) (ite index_1_0_0 1 0)) 1))
(assert (= (+ (ite index_0_1_0 1 0) (ite index_1_1_0 1 0)) 1))
(assert (= (+ (ite index_0_2_0 1 0) (ite index_1_2_0 1 0)) 1))
(assert (= (+ (ite index_0_0_1 1 0) (ite index_1_0_1 1 0)) 1))
(assert (= (+ (ite index_0_1_1 1 0) (ite index_1_1_1 1 0)) 1))
(assert (= (+ (ite index_0_2_1 1 0) (ite index_1_2_1 1 0)) 1))
(assert (or (and index_0_0_0 (= home_0_0 1) (= away_0_0 4)) (and index_0_0_1 (= home_0_0 2) (= away_0_0 3))))
(assert (or (and index_0_1_0 (= home_0_1 2) (= away_0_1 4)) (and index_0_1_1 (= home_0_1 1) (= away_0_1 3))))
(assert (or (and index_0_2_0 (= home_0_2 3) (= away_0_2 4)) (and index_0_2_1 (= home_0_2 1) (= away_0_2 2))))
(assert (or (and index_1_0_0 (= home_1_0 1) (= away_1_0 4)) (and index_1_0_1 (= home_1_0 2) (= away_1_0 3))))
(assert (or (and index_1_1_0 (= home_1_1 2) (= away_1_1 4)) (and index_1_1_1 (= home_1_1 1) (= away_1_1 3))))
(assert (or (and index_1_2_0 (= home_1_2 3) (= away_1_2 4)) (and index_1_2_1 (= home_1_2 1) (= away_1_2 2))))
(assert (<= (+ (ite index_0_0_0 1 0) (ite index_0_1_1 1 0) (ite index_0_2_1 1 0)) 2))
(assert (<= (+ (ite index_1_0_0 1 0) (ite index_1_1_1 1 0) (ite index_1_2_1 1 0)) 2))
(assert (<= (+ (ite index_0_0_1 1 0) (ite index_0_1_0 1 0) (ite index_0_2_1 1 0)) 2))
(assert (<= (+ (ite index_1_0_1 1 0) (ite index_1_1_0 1 0) (ite index_1_2_1 1 0)) 2))
(assert (<= (+ (ite index_0_0_1 1 0) (ite index_0_1_1 1 0) (ite index_0_2_0 1 0)) 2))
(assert (<= (+ (ite index_1_0_1 1 0) (ite index_1_1_1 1 0) (ite index_1_2_0 1 0)) 2))
(assert (<= (+ (ite index_0_0_0 1 0) (ite index_0_1_0 1 0) (ite index_0_2_0 1 0)) 2))
(assert (<= (+ (ite index_1_0_0 1 0) (ite index_1_1_0 1 0) (ite index_1_2_0 1 0)) 2))
(assert index_0_0_0)
(check-sat)
(get-model)